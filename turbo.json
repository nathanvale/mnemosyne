{
  "$schema": "https://turbo.build/schema.json",
  "globalDependencies": ["**/.env.*local", "**/.env", "tsconfig*.json"],
  "globalEnv": [
    "NODE_ENV",
    "CI",
    "TMPDIR",
    "DATABASE_URL",
    "TEST_VERBOSE",
    "VITEST",
    "NEXT_PUBLIC_BUILD_VERSION",
    "LOG_LEVEL",
    "LOGGER_MODE",
    "LOGGER_PRETTY",
    "LOGGER_CALLSITE",
    "ALLOWED_ORIGINS",
    "CLAUDE_HOOKS_TYPESCRIPT_ENABLED",
    "CLAUDE_HOOKS_ESLINT_ENABLED",
    "CLAUDE_HOOKS_ESLINT_AUTOFIX",
    "CLAUDE_HOOKS_PRETTIER_ENABLED",
    "CLAUDE_HOOKS_PRETTIER_AUTOFIX",
    "CLAUDE_HOOKS_AUTOFIX_SILENT",
    "CLAUDE_HOOKS_SHOW_DEPENDENCY_ERRORS",
    "CLAUDE_HOOKS_DEBUG",
    "CLAUDE_HOOKS_SOUND_SUCCESS",
    "CLAUDE_HOOKS_SOUND_WARNING",
    "CLAUDE_HOOKS_SOUND_ERROR",
    "CLAUDE_HOOKS_SOUND_VOLUME",
    "CLAUDE_HOOKS_SOUND_DELAY",
    "CLAUDE_HOOKS_SOUND_COOLDOWN",
    "CLAUDE_HOOKS_MIN_EXEC_TIME",
    "CLAUDE_HOOKS_LOG_DIR",
    "CLAUDE_HOOKS_VOLUME",
    "CLAUDE_HOOKS_NOTIFICATION_SOUND",
    "CLAUDE_HOOKS_NOTIFICATION_SPEECH",
    "CLAUDE_HOOKS_NOTIFICATION_VOLUME",
    "CLAUDE_HOOKS_QUIET_HOURS_START",
    "CLAUDE_HOOKS_QUIET_HOURS_END",
    "CLAUDE_HOOKS_STOP_SOUND",
    "CLAUDE_HOOKS_STOP_SPEECH",
    "CLAUDE_HOOKS_STOP_TRANSCRIPT",
    "CLAUDE_HOOKS_STOP_COOLDOWN",
    "CLAUDE_HOOKS_SUBAGENT_SOUND",
    "CLAUDE_HOOKS_SUBAGENT_VOLUME",
    "CLAUDE_HOOKS_SUBAGENT_LOGGING",
    "CLAUDE_HOOKS_USE_LOCAL_DIR",
    "CLAUDE_HOOKS_NOTIFY",
    "CLAUDE_HOOKS_SPEAK",
    "CLAUDE_HOOKS_COOLDOWN_PERIOD",
    "CLAUDE_HOOKS_SPEECH_RATE",
    "CLAUDE_HOOKS_SPEECH_VOLUME",
    "CLAUDE_HOOKS_SPEECH_VOICE",
    "CLAUDE_HOOKS_QUIET_HOURS_TIMEZONE",
    "CLAUDE_HOOKS_QUIET_HOURS_DAYS",
    "CLAUDE_HOOKS_QUIET_HOURS_RANGES",
    "CLAUDE_HOOKS_QUIET_HOURS_ENABLED",
    "SOME_OTHER_VAR",
    "CUSTOM_DEBUG",
    "CUSTOM_LIST"
  ],
  "tasks": {
    "build": {
      "dependsOn": ["^build"],
      "inputs": [
        "src/**",
        "public/**",
        "package.json",
        "tsconfig.json",
        "next.config.js",
        "next.config.ts",
        "vite.config.ts",
        "vitest.config.ts",
        "prisma/**"
      ],
      "outputs": [
        ".next/**",
        "!.next/cache/**",
        "dist/**",
        "build/**",
        "generated/**"
      ]
    },
    "dev": {
      "cache": false,
      "persistent": true,
      "dependsOn": ["^build"]
    },
    "lint": {
      "dependsOn": ["^lint"],
      "inputs": [
        "src/**",
        "*.js",
        "*.ts",
        "*.tsx",
        "*.mjs",
        "eslint.config.*",
        ".eslintrc",
        ".eslintrc.*",
        "package.json",
        "tsconfig.json"
      ],
      "outputs": [],
      "cache": true
    },
    "type-check": {
      "dependsOn": ["^build"],
      "inputs": ["src/**", "tsconfig.json", "tsconfig*.json", "package.json"],
      "outputs": ["**/*.tsbuildinfo"]
    },
    "test": {
      "dependsOn": ["^build"],
      "inputs": ["src/**", "vitest.config.*", "package.json", ".storybook/**"],
      "outputs": [],
      "env": ["NODE_ENV"],
      "passThroughEnv": [
        "CI",
        "WALLABY_WORKER",
        "WALLABY_WORKER_ID",
        "VITEST_WORKER_ID",
        "VITEST_POOL_ID",
        "JEST_WORKER_ID",
        "WALLABY_QUIET",
        "WALLABY_SCHEMA_VERSION"
      ]
    },
    "test:storybook": {
      "dependsOn": ["^build", "build-storybook"],
      "inputs": ["src/**", ".storybook/**", "package.json"],
      "outputs": []
    },
    "format": {
      "inputs": [
        "src/**",
        "*.js",
        "*.ts",
        "*.tsx",
        "*.json",
        "*.md",
        ".prettierrc*",
        "prettier.config.*"
      ],
      "outputs": []
    },
    "format:check": {
      "inputs": [
        "src/**",
        "*.js",
        "*.ts",
        "*.tsx",
        "*.json",
        "*.md",
        ".prettierrc*",
        "prettier.config.*"
      ],
      "outputs": []
    },
    "storybook": {
      "cache": false,
      "persistent": true,
      "dependsOn": ["^build"]
    },
    "build-storybook": {
      "dependsOn": ["^build"],
      "inputs": ["src/**", ".storybook/**", "package.json"],
      "outputs": ["storybook-static/**"]
    },
    "db:reset": {
      "cache": false,
      "inputs": ["prisma/**"]
    },
    "db:push": {
      "cache": false,
      "inputs": ["prisma/**"]
    },
    "db:migrate": {
      "cache": false,
      "inputs": ["prisma/**"]
    },
    "db:studio": {
      "cache": false,
      "persistent": true
    },
    "import:messages": {
      "cache": false,
      "dependsOn": ["^build"]
    },
    "clean": {
      "cache": false
    }
  }
}
