name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      pnpm-cache-dir: ${{ steps.pnpm-config.outputs.cache-dir }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Get pnpm store directory
      id: pnpm-config
      run: echo "cache-dir=$(pnpm store path)" >> $GITHUB_OUTPUT
      
    - name: Cache pnpm dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.pnpm-config.outputs.cache-dir }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Upload workspace
      uses: actions/upload-artifact@v4
      with:
        name: workspace
        path: |
          .
          !node_modules
        retention-days: 1

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Download workspace
      uses: actions/download-artifact@v4
      with:
        name: workspace
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Cache pnpm dependencies
      uses: actions/cache@v4
      with:
        path: ${{ needs.setup.outputs.pnpm-cache-dir }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run linting
      run: pnpm run lint

  type-check:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Download workspace
      uses: actions/download-artifact@v4
      with:
        name: workspace
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Cache pnpm dependencies
      uses: actions/cache@v4
      with:
        path: ${{ needs.setup.outputs.pnpm-cache-dir }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run type checking
      run: pnpm run type-check

  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Download workspace
      uses: actions/download-artifact@v4
      with:
        name: workspace
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Cache pnpm dependencies
      uses: actions/cache@v4
      with:
        path: ${{ needs.setup.outputs.pnpm-cache-dir }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Install Playwright browsers
      run: pnpm exec playwright install --with-deps
      
    - name: Run tests
      run: pnpm run test --run

  build:
    needs: [lint, type-check, test]
    runs-on: ubuntu-latest
    steps:
    - name: Download workspace
      uses: actions/download-artifact@v4
      with:
        name: workspace
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Cache pnpm dependencies
      uses: actions/cache@v4
      with:
        path: ${{ needs.setup.outputs.pnpm-cache-dir }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build application
      run: pnpm run build
